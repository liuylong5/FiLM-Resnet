!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
!
!  Differentiation of aqchem_newton in reverse (adjoint) mode:
!   gradient     of useful results: no3 phclf k na so3 so4 ae act1
!                gm2 act2 pfoaf co3 bb pso2f fe phno3f ca initgas
!                hso3 hso4 cl mg pco2f nh4 mn pnh3f hco2 ts6 hco3
!                a b
!   with respect to varying inputs: k na act1 gm2 act2 sk6ts6 fe
!                ca initgas mg mn ts6 a b
      SUBROUTINE AQCHEM_NEWTON_B(bb, bbb, recipa1, recipa2, pso2f, pso2fb,
     +  pnh3f, pnh3fb, phclf, phclfb, pfoaf, pfoafb, phno3f, phno3fb, pco2f,
     +  pco2fb, ae, aeb, so4, so4b, hso4, hso4b, so3, so3b, hso3, hso3b, co3,
     +  co3b, hco3, hco3b, oh, nh4, nh4b, hco2, hco2b, no3, no3b, cl, clb,
     +  initgas, initgasb, sk6ts6, sk6ts6b, ts6, ts6b, na, nab, ca, cab, mg,
     +  mgb, mn, mnb, fe, feb, k, kb, a, ab, b, bb0, xlso2, so21, so212,
     +  so212h, so21h, xlnh3, nh3dh20, nh31hdh, xlhcl, hcl1, hcl1h, xl, foah,
     +  foa1h, xlhno3, hno31, hno31h, xlco2, co21, co212, co212h, co21h, h2ow
     +  , act1, act1b, act2, act2b, gm2, gm2b, sk6, ngas, lso2, lnh3, lhcl,
     +  lfoa, lhno3, lco2)
        IMPLICIT NONE
!
!Ph
        REAL*8 :: bb
        REAL*8 :: bbb
! guess for H+ conc in cloudwater (mol/liter)
        REAL*8 :: ae
        REAL*8 :: aeb
! SO4= conc in cloudwater (mol/liter)
        REAL*8 :: so4
        REAL*8 :: so4b
! HSO4 concn in cloudwater (mol/liter)
        REAL*8 :: hso4
        REAL*8 :: hso4b
! SO3= conc in cloudwater (mol/liter)
        REAL*8 :: so3
        REAL*8 :: so3b
! HSO3 conc in cloudwater (mol/liter)
        REAL*8 :: hso3
        REAL*8 :: hso3b
! CO3= conc in cloudwater (mol/liter)
        REAL*8 :: co3
        REAL*8 :: co3b
! HCO3 conc in cloudwater (mol/liter)
        REAL*8 :: hco3
        REAL*8 :: hco3b
! OH conc in cloudwater (mol/liter)
        REAL*8 :: oh
        REAL*8 :: ohb
! NH4+ conc in cloudwater (mol/liter)
        REAL*8 :: nh4
        REAL*8 :: nh4b
! HCO2 conc in cloudwater (mol/liter)
        REAL*8 :: hco2
        REAL*8 :: hco2b
! NO3 conc in cloudwater (mol/liter)
        REAL*8 :: no3
        REAL*8 :: no3b
! total Cl-  conc in cloudwater (mol/liter)
        REAL*8 :: cl
        REAL*8 :: clb
!
        REAL*8 :: mn, fe, k, a, b
        REAL*8 :: mnb, feb, kb, ab, bb0
!
        INTEGER :: ngas, lso2, lnh3, lhcl, lfoa, lhno3, lco2
!
! initial gas partial pressure (atm)
        REAL*8 :: initgas(ngas)
        REAL*8 :: initgasb(ngas)
!
        REAL*8 :: sk6ts6
        REAL*8 :: sk6ts6b
! SO4 conc in cloudwater (mol/liter)
        REAL*8 :: ts6
        REAL*8 :: ts6b
! Na conc in cloudwater (mol/liter)
        REAL*8 :: na
        REAL*8 :: nab
! Calcium conc in cloudwater (mol/liter)
        REAL*8 :: ca
        REAL*8 :: cab
!
        REAL*8 :: mg
        REAL*8 :: mgb
!
!
        REAL*8 :: recipa1
!
        REAL*8 :: recipa2
! gas only SO2 partial pressure (atm)
        REAL*8 :: pso2f
        REAL*8 :: pso2fb
! gas only NH3 partial pressure (atm)
        REAL*8 :: pnh3f
        REAL*8 :: pnh3fb
! gas only HCL partial pressure (atm)
        REAL*8 :: phclf
        REAL*8 :: phclfb
! gas only ORGANIC ACID partial press (atm)
        REAL*8 :: pfoaf
        REAL*8 :: pfoafb
! gas only HNO3 partial pressure (atm)
        REAL*8 :: phno3f
        REAL*8 :: phno3fb
! gas only CO2 partial pressure (atm)
        REAL*8 :: pco2f
        REAL*8 :: pco2fb
!
!
        REAL*8 :: xlso2
!
        REAL*8 :: xlnh3
! const in calc of HCL final partial pres
        REAL*8 :: xlhcl
!
        REAL*8 :: xl
!
        REAL*8 :: xlhno3
!
        REAL*8 :: xlco2
!
!...dissociation constants
! First dissociation constant for SO2
        REAL*8 :: so21
! SO21*SO2H
        REAL*8 :: so21h
! SO21*SO22
        REAL*8 :: so212
! SO21*SO22*SO2H
        REAL*8 :: so212h
!
        REAL*8 :: nh3dh20
!
        REAL*8 :: nh31hdh
! First dissociation constant for HCL
        REAL*8 :: hcl1
! HCL1*HCLH
        REAL*8 :: hcl1h
! Henry's Law constant for FOA
        REAL*8 :: foah
! FOAH*FOA1
        REAL*8 :: foa1h
! First dissociation constant for HNO3
        REAL*8 :: hno31
!
        REAL*8 :: hno31h
! First dissociation constant for CO2
        REAL*8 :: co21
! CO2H*CO21
        REAL*8 :: co21h
! CO21*CO22
        REAL*8 :: co212
! CO2H*CO21*CO22
        REAL*8 :: co212h
!
        REAL*8 :: sk6
!
        REAL*8 :: h2ow
!
! activity correction factor!single ions
        REAL*8 :: act1
        REAL*8 :: act1b
! activity factor correction!double ions
        REAL*8 :: act2
        REAL*8 :: act2b
! activity correction factor
        REAL*8 :: gm2
        REAL*8 :: gm2b
!local variables
        REAL*8, PARAMETER :: small=1.d-6
!
        REAL*8 :: fb
        REAL*8 :: fbb
!
        REAL*8 :: fbp
        REAL*8 :: fbpb
!
        REAL*8 :: bbp
        REAL*8 :: step
        REAL*8 :: stepb
        REAL*8 :: alpha
        REAL*8 :: stion, gm1log, gm2log, gm1
        REAL*8 :: stionb, gm1logb, gm2logb, gm1b
        INTEGER :: branch
        REAL*8 :: temp2
        REAL*8 :: temp1
        REAL*8 :: temp0
        REAL*8 :: tempb1
        REAL*8 :: tempb0
        INTRINSIC MAX
        INTRINSIC ABS
        REAL*8 :: tempb
        REAL*8 :: abs0
        REAL*8 :: temp1b
        INTRINSIC SQRT
        REAL*8 :: temp
        REAL*8 :: temp1b1
        REAL*8 :: temp1b0
!
        bbp = 1.d0
        CALL PUSHREAL8(hso3)
        CALL PUSHREAL8(ae)
        CALL AQCHEM_FUNP(bb, bbp, fb, fbp, ae, so4, hso4, so3, hso3, co3, hco3
     +             , oh, nh4, hco2, no3, cl, initgas, sk6ts6, ts6, na, ca, mg
     +             , xlso2, so21, so212, so212h, so21h, xlnh3, nh3dh20,
     +             nh31hdh, xlhcl, hcl1, hcl1h, xl, foah, foa1h, xlhno3, hno31
     +             , hno31h, xlco2, co21, co212, co212h, co21h, h2ow, act1,
     +             act2, gm2, sk6, ngas, lso2, lnh3, lhcl, lfoa, lhno3, lco2)
!
!slz limit the Newton step size
        step = -(fb/fbp)
        alpha = .1d0
        DO WHILE (.true.)
          IF (alpha*step .GE. 0.) THEN
            abs0 = alpha*step
          ELSE
            abs0 = -(alpha*step)
          END IF
          IF (abs0 .GT. small) THEN
            alpha = .1d0*alpha
          ELSE
            GOTO 100
          END IF
        END DO
100      step = alpha*step
        CALL PUSHREAL8(bb)
        bb = bb + step
!
        CALL AQCHEM_FUN(bb, recipa1, recipa2, pso2f, pnh3f, phclf, pfoaf,
     +            phno3f, pco2f, ae, so4, hso4, so3, hso3, co3, hco3, oh, nh4
     +            , hco2, no3, cl, initgas, sk6ts6, ts6, na, ca, mg, xlso2,
     +            so21, so212, so212h, so21h, xlnh3, nh3dh20, nh31hdh, xlhcl,
     +            hcl1, hcl1h, xl, foah, foa1h, xlhno3, hno31, hno31h, xlco2,
     +            co21, co212, co212h, co21h, h2ow, act1, act2, gm2, sk6, ngas
     +            , lso2, lnh3, lhcl, lfoa, lhno3, lco2)
!
!slz update ACT1, ACT2, GM2
        stion = 0.5d0*(ae+nh4+oh+hco3+hso3+4.0d0*(so4+co3+so3+ca+mg+mn)+no3+
     +    hso4+9.0d0*fe+na+k+cl+a+b+hco2)
        gm1log = -(0.509d0*(SQRT(stion)/(1.0d0+SQRT(stion))-0.2d0*stion))
        gm2log = gm1log*4.0d0
        gm1 = 10.0d0**gm1log
        IF (10.0d0**gm2log .LT. 1.0d-30) THEN
          CALL PUSHREAL8(gm2)
          gm2 = 1.0d-30
          CALL PUSHCONTROL1B(0)
        ELSE
          CALL PUSHREAL8(gm2)
          gm2 = 10.0d0**gm2log
          CALL PUSHCONTROL1B(1)
        END IF
        IF (gm1*gm1 .LT. 1.0d-30) THEN
          CALL PUSHREAL8(act1)
          act1 = 1.0d-30
          CALL PUSHCONTROL1B(0)
        ELSE
          CALL PUSHREAL8(act1)
          act1 = gm1*gm1
          CALL PUSHCONTROL1B(1)
        END IF
        IF (gm1*gm1*gm2 .LT. 1.0d-30) THEN
          CALL PUSHREAL8(act2)
          act2 = 1.0d-30
          CALL PUSHCONTROL1B(0)
        ELSE
          CALL PUSHREAL8(act2)
          act2 = gm1*gm1*gm2
          CALL PUSHCONTROL1B(1)
        END IF
!slz update gas partial pressures and aerosol liquid phase concentrations
        CALL AQCHEM_FUN(bb, recipa1, recipa2, pso2f, pnh3f, phclf, pfoaf,
     +            phno3f, pco2f, ae, so4, hso4, so3, hso3, co3, hco3, oh, nh4
     +            , hco2, no3, cl, initgas, sk6ts6, ts6, na, ca, mg, xlso2,
     +            so21, so212, so212h, so21h, xlnh3, nh3dh20, nh31hdh, xlhcl,
     +            hcl1, hcl1h, xl, foah, foa1h, xlhno3, hno31, hno31h, xlco2,
     +            co21, co212, co212h, co21h, h2ow, act1, act2, gm2, sk6, ngas
     +            , lso2, lnh3, lhcl, lfoa, lhno3, lco2)
        CALL PUSHREAL8(stion)
!
!slz update GM2
        stion = 0.5d0*(ae+nh4+oh+hco3+hso3+4.0d0*(so4+co3+so3+ca+mg+mn)+no3+
     +    hso4+9.0d0*fe+na+k+cl+a+b+hco2)
        CALL PUSHREAL8(gm1log)
        gm1log = -(0.509d0*(SQRT(stion)/(1.0d0+SQRT(stion))-0.2d0*stion))
        CALL PUSHREAL8(gm2log)
        gm2log = gm1log*4.0d0
        IF (10.0d0**gm2log .LT. 1.0d-30) THEN
          gm2logb = 0.0_8
        ELSE
          gm2logb = 10.0d0**gm2log*LOG(10.0d0)*gm2b
        END IF
        CALL POPREAL8(gm2log)
        gm1logb = 4.0d0*gm2logb
        CALL POPREAL8(gm1log)
        temp2 = SQRT(stion)
        temp1 = SQRT(stion)
        temp1b = -(0.509d0*gm1logb/(temp2+1.0d0))
        IF (stion .EQ. 0.0) THEN
          stionb = 0.509d0*0.2d0*gm1logb
        ELSE
          stionb = 0.509d0*0.2d0*gm1logb + (1.0/(2.0*temp1)-temp1/((temp2+
     +      1.0d0)*2.0*temp2))*temp1b
        END IF
        CALL POPREAL8(stion)
        temp1b0 = 0.5d0*stionb
        temp1b1 = 4.0d0*temp1b0
        aeb = aeb + temp1b0
        nh4b = nh4b + temp1b0
        ohb = temp1b0
        hco3b = hco3b + temp1b0
        hso3b = hso3b + temp1b0
        so4b = so4b + temp1b1
        co3b = co3b + temp1b1
        so3b = so3b + temp1b1
        cab = cab + temp1b1
        mgb = mgb + temp1b1
        mnb = mnb + temp1b1
        no3b = no3b + temp1b0
        hso4b = hso4b + temp1b0
        feb = feb + 9.0d0*temp1b0
        nab = nab + temp1b0
        kb = kb + temp1b0
        clb = clb + temp1b0
        ab = ab + temp1b0
        bb0 = bb0 + temp1b0
        hco2b = hco2b + temp1b0
        sk6ts6b = 0.0_8
        CALL AQCHEM_FUN_B(bb, bbb, recipa1, recipa2, pso2f, pso2fb, pnh3f,
     +              pnh3fb, phclf, phclfb, pfoaf, pfoafb, phno3f, phno3fb,
     +              pco2f, pco2fb, ae, aeb, so4, so4b, hso4, hso4b, so3, so3b
     +              , hso3, hso3b, co3, co3b, hco3, hco3b, oh, ohb, nh4, nh4b
     +              , hco2, hco2b, no3, no3b, cl, clb, initgas, initgasb,
     +              sk6ts6, sk6ts6b, ts6, ts6b, na, ca, mg, xlso2, so21, so212
     +              , so212h, so21h, xlnh3, nh3dh20, nh31hdh, xlhcl, hcl1,
     +              hcl1h, xl, foah, foa1h, xlhno3, hno31, hno31h, xlco2, co21
     +              , co212, co212h, co21h, h2ow, act1, act1b, act2, act2b,
     +              gm2, gm2b, sk6, ngas, lso2, lnh3, lhcl, lfoa, lhno3, lco2)
        CALL POPCONTROL1B(branch)
        IF (branch .EQ. 0) THEN
          CALL POPREAL8(act2)
          gm1b = 0.0_8
        ELSE
          CALL POPREAL8(act2)
          gm1b = gm2*2*gm1*act2b
          gm2b = gm2b + gm1**2*act2b
        END IF
        CALL POPCONTROL1B(branch)
        IF (branch .EQ. 0) THEN
          CALL POPREAL8(act1)
        ELSE
          CALL POPREAL8(act1)
          gm1b = gm1b + 2*gm1*act1b
        END IF
        CALL POPCONTROL1B(branch)
        IF (branch .EQ. 0) THEN
          CALL POPREAL8(gm2)
          gm2logb = 0.0_8
        ELSE
          CALL POPREAL8(gm2)
          gm2logb = 10.0d0**gm2log*LOG(10.0d0)*gm2b
        END IF
        gm1logb = 4.0d0*gm2logb + 10.0d0**gm1log*LOG(10.0d0)*gm1b
        temp0 = SQRT(stion)
        temp = SQRT(stion)
        tempb = -(0.509d0*gm1logb/(temp0+1.0d0))
        IF (stion .EQ. 0.0) THEN
          stionb = 0.509d0*0.2d0*gm1logb
        ELSE
          stionb = 0.509d0*0.2d0*gm1logb + (1.0/(2.0*temp)-temp/((temp0+1.0d0)
     +      *2.0*temp0))*tempb
        END IF
        tempb0 = 0.5d0*stionb
        tempb1 = 4.0d0*tempb0
        aeb = tempb0
        nh4b = tempb0
        ohb = tempb0
        hco3b = tempb0
        hso3b = tempb0
        so4b = tempb1
        co3b = tempb1
        so3b = tempb1
        cab = cab + tempb1
        mgb = mgb + tempb1
        mnb = mnb + tempb1
        no3b = tempb0
        hso4b = tempb0
        feb = feb + 9.0d0*tempb0
        nab = nab + tempb0
        kb = kb + tempb0
        clb = tempb0
        ab = ab + tempb0
        bb0 = bb0 + tempb0
        hco2b = tempb0
        pso2fb = 0.0_8
        pnh3fb = 0.0_8
        phclfb = 0.0_8
        pfoafb = 0.0_8
        phno3fb = 0.0_8
        pco2fb = 0.0_8
        act1b = 0.0_8
        act2b = 0.0_8
        CALL AQCHEM_FUN_B(bb, bbb, recipa1, recipa2, pso2f, pso2fb, pnh3f,
     +              pnh3fb, phclf, phclfb, pfoaf, pfoafb, phno3f, phno3fb,
     +              pco2f, pco2fb, ae, aeb, so4, so4b, hso4, hso4b, so3, so3b
     +              , hso3, hso3b, co3, co3b, hco3, hco3b, oh, ohb, nh4, nh4b
     +              , hco2, hco2b, no3, no3b, cl, clb, initgas, initgasb,
     +              sk6ts6, sk6ts6b, ts6, ts6b, na, ca, mg, xlso2, so21, so212
     +              , so212h, so21h, xlnh3, nh3dh20, nh31hdh, xlhcl, hcl1,
     +              hcl1h, xl, foah, foa1h, xlhno3, hno31, hno31h, xlco2, co21
     +              , co212, co212h, co21h, h2ow, act1, act1b, act2, act2b,
     +              gm2, gm2b, sk6, ngas, lso2, lnh3, lhcl, lfoa, lhno3, lco2)
        CALL POPREAL8(bb)
        stepb = bbb
        stepb = alpha*stepb
        fbb = -(stepb/fbp)
        fbpb = fb*stepb/fbp**2
        CALL POPREAL8(ae)
        CALL POPREAL8(hso3)
        CALL AQCHEM_FUNP_B(bb, bbp, fb, fbb, fbp, fbpb, ae, so4, hso4, so3,
     +               hso3, co3, hco3, oh, nh4, hco2, no3, cl, initgas,
     +               initgasb, sk6ts6, sk6ts6b, ts6, ts6b, na, nab, ca, cab,
     +               mg, mgb, xlso2, so21, so212, so212h, so21h, xlnh3,
     +               nh3dh20, nh31hdh, xlhcl, hcl1, hcl1h, xl, foah, foa1h,
     +               xlhno3, hno31, hno31h, xlco2, co21, co212, co212h, co21h
     +               , h2ow, act1, act1b, act2, act2b, gm2, gm2b, sk6, ngas,
     +               lso2, lnh3, lhcl, lfoa, lhno3, lco2)
      END SUBROUTINE AQCHEM_NEWTON_B

!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
!
!  Differentiation of aqchem_fun in reverse (adjoint) mode:
!   gradient     of useful results: no3 phclf so3 so4 ae act1 act2
!                pfoaf sk6ts6 co3 bb pso2f oh phno3f initgas hso3
!                hso4 cl pco2f nh4 pnh3f hco2 ts6 hco3
!   with respect to varying inputs: act1 gm2 act2 sk6ts6 bb initgas
!                ts6
!
      SUBROUTINE AQCHEM_FUN_B(bb, bbb, recipa1, recipa2, pso2f, pso2fb, pnh3f
     +  , pnh3fb, phclf, phclfb, pfoaf, pfoafb, phno3f, phno3fb, pco2f, pco2fb
     +  , ae, aeb, so4, so4b, hso4, hso4b, so3, so3b, hso3, hso3b, co3, co3b,
     +  hco3, hco3b, oh, ohb, nh4, nh4b, hco2, hco2b, no3, no3b, cl, clb,
     +  initgas, initgasb, sk6ts6, sk6ts6b, ts6, ts6b, na, ca, mg, xlso2, so21
     +  , so212, so212h, so21h, xlnh3, nh3dh20, nh31hdh, xlhcl, hcl1, hcl1h,
     +  xl, foah, foa1h, xlhno3, hno31, hno31h, xlco2, co21, co212, co212h,
     +  co21h, h2ow, act1, act1b, act2, act2b, gm2, gm2b, sk6, ngas, lso2,
     +  lnh3, lhcl, lfoa, lhno3, lco2)
        IMPLICIT NONE
!
! lower limit guess of cloudwater pH
        REAL*8 :: bb
        REAL*8 :: bbb
! guess for H+ conc in cloudwater (mol/liter)
        REAL*8 :: ae
        REAL*8 :: aeb
! SO4= conc in cloudwater (mol/liter)
        REAL*8 :: so4
        REAL*8 :: so4b
! HSO4 concn in cloudwater (mol/liter)
        REAL*8 :: hso4
        REAL*8 :: hso4b
! SO3= conc in cloudwater (mol/liter)
        REAL*8 :: so3
        REAL*8 :: so3b
! HSO3 conc in cloudwater (mol/liter)
        REAL*8 :: hso3
        REAL*8 :: hso3b
! CO3= conc in cloudwater (mol/liter)
        REAL*8 :: co3
        REAL*8 :: co3b
! HCO3 conc in cloudwater (mol/liter)
        REAL*8 :: hco3
        REAL*8 :: hco3b
! OH conc in cloudwater (mol/liter)
        REAL*8 :: oh
        REAL*8 :: ohb
! NH4+ conc in cloudwater (mol/liter)
        REAL*8 :: nh4
        REAL*8 :: nh4b
! HCO2 conc in cloudwater (mol/liter)
        REAL*8 :: hco2
        REAL*8 :: hco2b
! NO3 conc in cloudwater (mol/liter)
        REAL*8 :: no3
        REAL*8 :: no3b
! total Cl-  conc in cloudwater (mol/liter)
        REAL*8 :: cl
        REAL*8 :: clb
!
        INTEGER :: ngas, lso2, lnh3, lhcl, lfoa, lhno3, lco2
!
! initial gas partial pressure (atm)
        REAL*8 :: initgas(ngas)
        REAL*8 :: initgasb(ngas)
!
        REAL*8 :: sk6ts6
        REAL*8 :: sk6ts6b
! SO4 conc in cloudwater (mol/liter)
        REAL*8 :: ts6
        REAL*8 :: ts6b
! Na conc in cloudwater (mol/liter)
        REAL*8 :: na
! Calcium conc in cloudwater (mol/liter)
        REAL*8 :: ca
!
        REAL*8 :: mg
!
!
        REAL*8 :: xlso2
!
        REAL*8 :: xlnh3
! const in calc of HCL final partial pres
        REAL*8 :: xlhcl
!
        REAL*8 :: xl
!
        REAL*8 :: xlhno3
!
        REAL*8 :: xlco2
!
!...dissociation constants
! First dissociation constant for SO2
        REAL*8 :: so21
! SO21*SO2H
        REAL*8 :: so21h
! SO21*SO22
        REAL*8 :: so212
! SO21*SO22*SO2H
        REAL*8 :: so212h
!
        REAL*8 :: nh3dh20
!
        REAL*8 :: nh31hdh
! First dissociation constant for HCL
        REAL*8 :: hcl1
! HCL1*HCLH
        REAL*8 :: hcl1h
! Henry's Law constant for FOA
        REAL*8 :: foah
! FOAH*FOA1
        REAL*8 :: foa1h
! First dissociation constant for HNO3
        REAL*8 :: hno31
!
        REAL*8 :: hno31h
! First dissociation constant for CO2
        REAL*8 :: co21
! CO2H*CO21
        REAL*8 :: co21h
! CO21*CO22
        REAL*8 :: co212
! CO2H*CO21*CO22
        REAL*8 :: co212h
!
        REAL*8 :: sk6
!
        REAL*8 :: h2ow
!
! activity correction factor!single ions
        REAL*8 :: act1
        REAL*8 :: act1b
! activity factor correction!double ions
        REAL*8 :: act2
        REAL*8 :: act2b
! activity correction factor
        REAL*8 :: gm2
        REAL*8 :: gm2b
!local variables
!
        REAL*8 :: recipa1
        REAL*8 :: recipa1b
!
        REAL*8 :: recipa2
        REAL*8 :: recipa2b
! gas only SO2 partial pressure (atm)
        REAL*8 :: pso2f
        REAL*8 :: pso2fb
! gas only NH3 partial pressure (atm)
        REAL*8 :: pnh3f
        REAL*8 :: pnh3fb
! gas only HCL partial pressure (atm)
        REAL*8 :: phclf
        REAL*8 :: phclfb
! gas only ORGANIC ACID partial press (atm)
        REAL*8 :: pfoaf
        REAL*8 :: pfoafb
! gas only HNO3 partial pressure (atm)
        REAL*8 :: phno3f
        REAL*8 :: phno3fb
! gas only CO2 partial pressure (atm)
        REAL*8 :: pco2f
        REAL*8 :: pco2fb
        REAL*8 :: temp3
        REAL*8 :: temp2
        REAL*8 :: temp1
        REAL*8 :: temp0
        REAL*8 :: temp0b
        REAL*8 :: tempb0
        REAL*8 :: temp6b
        REAL*8 :: tempb
        REAL*8 :: temp5b
        REAL*8 :: temp
        REAL*8 :: temp6b0
        REAL*8 :: temp5
        REAL*8 :: temp4
!
!
        ae = 10.0d0**(-bb)
        recipa1 = 1.0d0/(ae*act1)
        recipa2 = 1.0d0/(ae*ae*act2)
!
!...calculate final gas phase partial pressure of SO2, NH3, HNO3
!...  HCOOH, and CO2 (atm)
!
        pso2f = initgas(lso2)/(1.0d0+xlso2*(1.0d0+so21*recipa1+so212*recipa2))
!
        pnh3f = initgas(lnh3)/(1.0d0+xlnh3*(1.0d0+nh3dh20*ae))
!
        phclf = initgas(lhcl)/(1.0d0+xlhcl*(1.0d0+hcl1*recipa1))
!
        pfoaf = initgas(lfoa)/(1.0d0+xl*(foah+foa1h*recipa1))
!
        phno3f = initgas(lhno3)/(1.0d0+xlhno3*(1.0d0+hno31*recipa1))
!
        pco2f = initgas(lco2)/(1.0d0+xlco2*(1.0d0+co21*recipa1+co212*recipa2))
!
!...calculate liquid phase concentrations (moles/liter)
!
! new for sea salt
        pco2fb = pco2fb + co212h*recipa2*co3b + co21h*recipa1*hco3b
        pso2fb = pso2fb + so212h*recipa2*so3b + so21h*recipa1*hso3b
        temp5 = xlco2*(co21*recipa1+co212*recipa2+1.0d0) + 1.0d0
        temp5b = -(initgas(lco2)*xlco2*pco2fb/temp5**2)
        temp4 = xlhno3*(hno31*recipa1+1.0d0) + 1.0d0
        temp3 = xl*(foah+foa1h*recipa1) + 1.0d0
        temp2 = xlhcl*(hcl1*recipa1+1.0d0) + 1.0d0
        temp0 = xlso2*(so21*recipa1+so212*recipa2+1.0d0) + 1.0d0
        temp0b = -(initgas(lso2)*xlso2*pso2fb/temp0**2)
        pfoafb = pfoafb + foa1h*recipa1*hco2b
        phno3fb = phno3fb + hno31h*recipa1*no3b
        phclfb = phclfb + hcl1h*recipa1*clb
        recipa1b = hno31h*phno3f*no3b + h2ow*ohb + so21h*pso2f*hso3b - xlhno3*
     +    initgas(lhno3)*hno31*phno3fb/temp4**2 - xlhcl*initgas(lhcl)*hcl1*
     +    phclfb/temp2**2 + so21*temp0b - xl*initgas(lfoa)*foa1h*pfoafb/temp3
     +    **2 + co21*temp5b + co21h*pco2f*hco3b + foa1h*pfoaf*hco2b + hcl1h*
     +    phclf*clb
        pnh3fb = pnh3fb + nh31hdh*ae*nh4b
        recipa2b = so212h*pso2f*so3b + so212*temp0b + co212*temp5b + co212h*
     +    pco2f*co3b
        ts6b = ts6b + hso4b
        so4b = so4b - hso4b
        temp6b0 = so4b/(sk6+ae*gm2)
        temp6b = -(sk6ts6*temp6b0/(sk6+ae*gm2))
        sk6ts6b = sk6ts6b + temp6b0
        gm2b = ae*temp6b
        initgasb(lco2) = initgasb(lco2) + pco2fb/temp5
        initgasb(lhno3) = initgasb(lhno3) + phno3fb/temp4
        initgasb(lfoa) = initgasb(lfoa) + pfoafb/temp3
        initgasb(lhcl) = initgasb(lhcl) + phclfb/temp2
        temp1 = xlnh3*(nh3dh20*ae+1.0d0) + 1.0d0
        initgasb(lnh3) = initgasb(lnh3) + pnh3fb/temp1
        initgasb(lso2) = initgasb(lso2) + pso2fb/temp0
        temp = ae**2*act2
        tempb = -(recipa2b/temp**2)
        act2b = act2b + ae**2*tempb
        tempb0 = -(recipa1b/(ae**2*act1**2))
        aeb = aeb + gm2*temp6b + act2*2*ae*tempb + act1*tempb0 - xlnh3*initgas
     +    (lnh3)*nh3dh20*pnh3fb/temp1**2 + nh31hdh*pnh3f*nh4b
        act1b = act1b + ae*tempb0
        bbb = bbb - 10.0d0**(-bb)*LOG(10.0d0)*aeb
      END SUBROUTINE AQCHEM_FUN_B

!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
!
!  Differentiation of aqchem_funp in reverse (adjoint) mode:
!   gradient     of useful results: na act1 gm2 act2 sk6ts6 fbd
!                fb ca initgas mg ts6
!   with respect to varying inputs: na act1 gm2 act2 sk6ts6 ca
!                initgas mg ts6
!
!        Generated by TAPENADE     (INRIA, Tropics team)
!slz post-processed by tpn2cmaq
!  Tapenade 3.6 (r4343) - 10 Feb 2012 10:52
!
!  Differentiation of aqchem_fun in forward (tangent) mode:
!   variations   of useful results: fb
!   with respect to varying inputs: bb
!   RW status of diff variables: bb:in fb:out
      SUBROUTINE AQCHEM_FUNP_B(bb, bbd, fb, fbb, fbd, fbdb, ae, so4, hso4, so3
     +  , hso3, co3, hco3, oh, nh4, hco2, no3, cl, initgas, initgasb, sk6ts6,
     +  sk6ts6b, ts6, ts6b, na, nab, ca, cab, mg, mgb, xlso2, so21, so212,
     +  so212h, so21h, xlnh3, nh3dh20, nh31hdh, xlhcl, hcl1, hcl1h, xl, foah,
     +  foa1h, xlhno3, hno31, hno31h, xlco2, co21, co212, co212h, co21h, h2ow
     +  , act1, act1b, act2, act2b, gm2, gm2b, sk6, ngas, lso2, lnh3, lhcl,
     +  lfoa, lhno3, lco2)
        IMPLICIT NONE
!
! lower limit guess of cloudwater pH
        REAL*8 :: bb
        REAL*8 :: bbd
! functional value
        REAL*8 :: fb
        REAL*8 :: fbb
        REAL*8 :: fbd
        REAL*8 :: fbdb
! guess for H+ conc in cloudwater (mol/liter)
        REAL*8 :: ae
        REAL*8 :: aed
! SO4= conc in cloudwater (mol/liter)
        REAL*8 :: so4
        REAL*8 :: so4b
        REAL*8 :: so4d
        REAL*8 :: so4db
! HSO4 concn in cloudwater (mol/liter)
        REAL*8 :: hso4
        REAL*8 :: hso4b
        REAL*8 :: hso4d
        REAL*8 :: hso4db
! SO3= conc in cloudwater (mol/liter)
        REAL*8 :: so3
        REAL*8 :: so3b
        REAL*8 :: so3d
        REAL*8 :: so3db
! HSO3 conc in cloudwater (mol/liter)
        REAL*8 :: hso3
        REAL*8 :: hso3b
        REAL*8 :: hso3d
        REAL*8 :: hso3db
! CO3= conc in cloudwater (mol/liter)
        REAL*8 :: co3
        REAL*8 :: co3b
        REAL*8 :: co3d
        REAL*8 :: co3db
! HCO3 conc in cloudwater (mol/liter)
        REAL*8 :: hco3
        REAL*8 :: hco3b
        REAL*8 :: hco3d
        REAL*8 :: hco3db
! OH conc in cloudwater (mol/liter)
        REAL*8 :: oh
        REAL*8 :: ohb
        REAL*8 :: ohd
        REAL*8 :: ohdb
! NH4+ conc in cloudwater (mol/liter)
        REAL*8 :: nh4
        REAL*8 :: nh4b
        REAL*8 :: nh4d
        REAL*8 :: nh4db
! HCO2 conc in cloudwater (mol/liter)
        REAL*8 :: hco2
        REAL*8 :: hco2b
        REAL*8 :: hco2d
        REAL*8 :: hco2db
! NO3 conc in cloudwater (mol/liter)
        REAL*8 :: no3
        REAL*8 :: no3b
        REAL*8 :: no3d
        REAL*8 :: no3db
! total Cl-  conc in cloudwater (mol/liter)
        REAL*8 :: cl
        REAL*8 :: clb
        REAL*8 :: cld
        REAL*8 :: cldb
!
        INTEGER :: ngas, lso2, lnh3, lhcl, lfoa, lhno3, lco2
!
! initial gas partial pressure (atm)
        REAL*8 :: initgas(ngas)
        REAL*8 :: initgasb(ngas)
!
        REAL*8 :: sk6ts6
        REAL*8 :: sk6ts6b
! SO4 conc in cloudwater (mol/liter)
        REAL*8 :: ts6
        REAL*8 :: ts6b
! Na conc in cloudwater (mol/liter)
        REAL*8 :: na
        REAL*8 :: nab
! Calcium conc in cloudwater (mol/liter)
        REAL*8 :: ca
        REAL*8 :: cab
!
        REAL*8 :: mg
        REAL*8 :: mgb
!
!
        REAL*8 :: xlso2
!
        REAL*8 :: xlnh3
! const in calc of HCL final partial pres
        REAL*8 :: xlhcl
!
        REAL*8 :: xl
!
        REAL*8 :: xlhno3
!
        REAL*8 :: xlco2
!
!...dissociation constants
! First dissociation constant for SO2
        REAL*8 :: so21
! SO21*SO2H
        REAL*8 :: so21h
! SO21*SO22
        REAL*8 :: so212
! SO21*SO22*SO2H
        REAL*8 :: so212h
!
        REAL*8 :: nh3dh20
!
        REAL*8 :: nh31hdh
! First dissociation constant for HCL
        REAL*8 :: hcl1
! HCL1*HCLH
        REAL*8 :: hcl1h
! Henry's Law constant for FOA
        REAL*8 :: foah
! FOAH*FOA1
        REAL*8 :: foa1h
! First dissociation constant for HNO3
        REAL*8 :: hno31
!
        REAL*8 :: hno31h
! First dissociation constant for CO2
        REAL*8 :: co21
! CO2H*CO21
        REAL*8 :: co21h
! CO21*CO22
        REAL*8 :: co212
! CO2H*CO21*CO22
        REAL*8 :: co212h
!
        REAL*8 :: sk6
!
        REAL*8 :: h2ow
!
! activity correction factor!single ions
        REAL*8 :: act1
        REAL*8 :: act1b
! activity factor correction!double ions
        REAL*8 :: act2
        REAL*8 :: act2b
! activity correction factor
        REAL*8 :: gm2
        REAL*8 :: gm2b
!local variables
!
        REAL*8 :: recipa1
        REAL*8 :: recipa1b
        REAL*8 :: recipa1d
        REAL*8 :: recipa1db
!
        REAL*8 :: recipa2
        REAL*8 :: recipa2b
        REAL*8 :: recipa2d
        REAL*8 :: recipa2db
! gas only SO2 partial pressure (atm)
        REAL*8 :: pso2f
        REAL*8 :: pso2fb
        REAL*8 :: pso2fd
        REAL*8 :: pso2fdb
! gas only NH3 partial pressure (atm)
        REAL*8 :: pnh3f
        REAL*8 :: pnh3fb
        REAL*8 :: pnh3fd
        REAL*8 :: pnh3fdb
! gas only HCL partial pressure (atm)
        REAL*8 :: phclf
        REAL*8 :: phclfb
        REAL*8 :: phclfd
        REAL*8 :: phclfdb
! gas only ORGANIC ACID partial press (atm)
        REAL*8 :: pfoaf
        REAL*8 :: pfoafb
        REAL*8 :: pfoafd
        REAL*8 :: pfoafdb
! gas only HNO3 partial pressure (atm)
        REAL*8 :: phno3f
        REAL*8 :: phno3fb
        REAL*8 :: phno3fd
        REAL*8 :: phno3fdb
! gas only CO2 partial pressure (atm)
        REAL*8 :: pco2f
        REAL*8 :: pco2fb
        REAL*8 :: pco2fd
        REAL*8 :: pco2fdb
        REAL*8 :: pwy1
        REAL*8 :: pwy1d
        REAL*8 :: temp3
        REAL*8 :: temp2
        REAL*8 :: temp1
        REAL*8 :: temp0
        REAL*8 :: temp13b
        REAL*8 :: temp7b
        REAL*8 :: temp2b0
        REAL*8 :: temp14
        REAL*8 :: temp13
        REAL*8 :: temp11b0
        REAL*8 :: temp12
        REAL*8 :: temp11
        REAL*8 :: temp10
        REAL*8 :: temp15b
        REAL*8 :: temp9b
        REAL*8 :: temp2b
        REAL*8 :: temp11b
        REAL*8 :: temp5b
        INTRINSIC LOG
        REAL*8 :: temp14b
        REAL*8 :: temp15b8
        REAL*8 :: temp15b7
        REAL*8 :: temp15b6
        REAL*8 :: temp15b5
        REAL*8 :: temp15b4
        REAL*8 :: temp15b3
        REAL*8 :: temp
        REAL*8 :: temp15b2
        REAL*8 :: temp15b1
        REAL*8 :: temp15b0
        REAL*8 :: temp9
        REAL*8 :: temp8
        REAL*8 :: temp7
        REAL*8 :: temp6
        REAL*8 :: temp4b
        REAL*8 :: temp5
        REAL*8 :: temp4
!
!
        pwy1d = -bbd
        pwy1 = -bb
        aed = 10.0d0**pwy1*LOG(10.0d0)*pwy1d
        CALL PUSHREAL8(ae)
        ae = 10.0d0**pwy1
        recipa1d = -(act1*aed/(ae*act1)**2)
        recipa1 = 1.0d0/(ae*act1)
        recipa2d = -(act2*(aed*ae+ae*aed)/(ae*ae*act2)**2)
        recipa2 = 1.0d0/(ae*ae*act2)
!
!...calculate final gas phase partial pressure of SO2, NH3, HNO3
!...  HCOOH, and CO2 (atm)
!
        pso2fd = -(initgas(lso2)*xlso2*(so21*recipa1d+so212*recipa2d)/(1.0d0+
     +    xlso2*(1.0d0+so21*recipa1+so212*recipa2))**2)
        pso2f = initgas(lso2)/(1.0d0+xlso2*(1.0d0+so21*recipa1+so212*recipa2))
!
!
        phclfd = -(initgas(lhcl)*xlhcl*hcl1*recipa1d/(1.0d0+xlhcl*(1.0d0+hcl1*
     +    recipa1))**2)
        phclf = initgas(lhcl)/(1.0d0+xlhcl*(1.0d0+hcl1*recipa1))
!
        pfoafd = -(initgas(lfoa)*xl*foa1h*recipa1d/(1.0d0+xl*(foah+foa1h*
     +    recipa1))**2)
        pfoaf = initgas(lfoa)/(1.0d0+xl*(foah+foa1h*recipa1))
!
        phno3fd = -(initgas(lhno3)*xlhno3*hno31*recipa1d/(1.0d0+xlhno3*(1.0d0+
     +    hno31*recipa1))**2)
        phno3f = initgas(lhno3)/(1.0d0+xlhno3*(1.0d0+hno31*recipa1))
!
        pco2fd = -(initgas(lco2)*xlco2*(co21*recipa1d+co212*recipa2d)/(1.0d0+
     +    xlco2*(1.0d0+co21*recipa1+co212*recipa2))**2)
        pco2f = initgas(lco2)/(1.0d0+xlco2*(1.0d0+co21*recipa1+co212*recipa2))
!
!...calculate liquid phase concentrations (moles/liter)
!
! new for sea salt
!
!...compute functional value
!
        temp = ae**2*act1
        temp0 = ae**4
        hso4db = -fbdb
        hso4b = -fbb
        temp15b = 2.0d0*fbb
        nh4b = fbb
        nab = nab + fbb
        cab = cab + temp15b
        mgb = mgb + temp15b
        co3b = -temp15b
        so3b = -temp15b
        so4b = -hso4b - temp15b
        ohb = -fbb
        hco3b = -fbb
        hso3b = -fbb
        no3b = -fbb
        hco2b = -fbb
        clb = -fbb
        temp15b0 = 2.0d0*fbdb
        nh4db = fbdb
        co3db = -temp15b0
        so3db = -temp15b0
        so4db = -hso4db - temp15b0
        ohdb = -fbdb
        hco3db = -fbdb
        hso3db = -fbdb
        no3db = -fbdb
        hco2db = -fbdb
        cldb = -fbdb
        temp15b1 = hcl1h*cldb
        phclfb = recipa1d*temp15b1 + hcl1h*recipa1*clb
        phclfdb = recipa1*temp15b1
        temp15b2 = hno31h*no3db
        phno3fb = recipa1d*temp15b2 + hno31h*recipa1*no3b
        phno3fdb = recipa1*temp15b2
        temp15b3 = foa1h*hco2db
        pfoafb = recipa1d*temp15b3 + foa1h*recipa1*hco2b
        pfoafdb = recipa1*temp15b3
        pnh3fb = nh31hdh*aed*nh4db + nh31hdh*ae*nh4b
        pnh3fdb = nh31hdh*ae*nh4db
        temp15b5 = co21h*hco3db
        temp15b6 = co212h*co3db
        pco2fb = recipa1d*temp15b5 + recipa2d*temp15b6 + co212h*recipa2*co3b +
     +    co21h*recipa1*hco3b
        pco2fdb = recipa2*temp15b6 + recipa1*temp15b5
        temp15b4 = so21h*hso3db
        temp15b7 = so212h*so3db
        pso2fb = recipa1d*temp15b4 + recipa2d*temp15b7 + so212h*recipa2*so3b +
     +    so21h*recipa1*hso3b
        pso2fdb = recipa2*temp15b7 + recipa1*temp15b4
        ts6b = ts6b + hso4b
        temp15b8 = so4b/(sk6+ae*gm2)
        temp14 = sk6 + ae*gm2
        temp14b = -(aed*so4db/temp14**2)
        sk6ts6b = sk6ts6b + gm2*temp14b + temp15b8
        gm2b = gm2b + (sk6ts6-2*sk6ts6*gm2*ae/temp14)*temp14b - sk6ts6*ae*
     +    temp15b8/(sk6+ae*gm2)
        temp13 = xlco2*(co21*recipa1+co212*recipa2+1.0d0) + 1.0d0
        temp13b = -(initgas(lco2)*xlco2*pco2fb/temp13**2)
        temp12 = xlco2*(co21*recipa1+co212*recipa2+1.0d0) + 1.0d0
        temp11 = co21*recipa1d + co212*recipa2d
        temp11b0 = -(xlco2*pco2fdb/temp12**2)
        initgasb(lco2) = initgasb(lco2) + temp11*temp11b0 + pco2fb/temp13
        temp11b = -(2*initgas(lco2)*temp11*xlco2*temp11b0/temp12)
        temp10 = xlhno3*(hno31*recipa1+1.0d0) + 1.0d0
        temp9 = xlhno3*(hno31*recipa1+1.0d0) + 1.0d0
        temp9b = -(xlhno3*hno31*phno3fdb/temp9**2)
        initgasb(lhno3) = initgasb(lhno3) + recipa1d*temp9b + phno3fb/temp10
        temp8 = xl*(foah+foa1h*recipa1) + 1.0d0
        temp7 = xl*(foah+foa1h*recipa1) + 1.0d0
        temp7b = -(xl*foa1h*pfoafdb/temp7**2)
        initgasb(lfoa) = initgasb(lfoa) + recipa1d*temp7b + pfoafb/temp8
        temp6 = xlhcl*(hcl1*recipa1+1.0d0) + 1.0d0
        temp5 = xlhcl*(hcl1*recipa1+1.0d0) + 1.0d0
        temp5b = -(xlhcl*hcl1*phclfdb/temp5**2)
        initgasb(lhcl) = initgasb(lhcl) + recipa1d*temp5b + phclfb/temp6
        initgasb(lnh3) = initgasb(lnh3) + pnh3fb/(xlnh3*(nh3dh20*ae+1.0d0)+
     +    1.0d0) - xlnh3*nh3dh20*aed*pnh3fdb/(xlnh3*(nh3dh20*ae+1.0d0)+1.0d0)
     +    **2
        temp4 = xlso2*(so21*recipa1+so212*recipa2+1.0d0) + 1.0d0
        temp4b = -(initgas(lso2)*xlso2*pso2fb/temp4**2)
        temp3 = xlso2*(so21*recipa1+so212*recipa2+1.0d0) + 1.0d0
        temp2 = so21*recipa1d + so212*recipa2d
        temp2b0 = -(xlso2*pso2fdb/temp3**2)
        recipa1db = phno3f*temp15b2 + h2ow*ohdb + pso2f*temp15b4 + initgas(
     +    lhno3)*temp9b + initgas(lhcl)*temp5b + initgas(lso2)*so21*temp2b0 +
     +    initgas(lfoa)*temp7b + initgas(lco2)*co21*temp11b0 + pco2f*temp15b5
     +    + pfoaf*temp15b3 + phclf*temp15b1
        recipa2db = pso2f*temp15b7 + initgas(lso2)*so212*temp2b0 + initgas(
     +    lco2)*co212*temp11b0 + pco2f*temp15b6
        initgasb(lso2) = initgasb(lso2) + temp2*temp2b0 + pso2fb/temp4
        temp2b = -(2*initgas(lso2)*temp2*xlso2*temp2b0/temp3)
        recipa1b = phclfd*temp15b1 + phno3fd*temp15b2 + pfoafd*temp15b3 +
     +    co21h*pco2f*hco3b + so21h*pso2f*hso3b + co21*temp13b - xlhno3*
     +    initgas(lhno3)*hno31*phno3fb/temp10**2 - xl*initgas(lfoa)*foa1h*
     +    pfoafb/temp8**2 - xlhcl*initgas(lhcl)*hcl1*phclfb/temp6**2 + so21*
     +    temp4b + so21*temp2b - xlhcl*2*initgas(lhcl)*recipa1d*hcl1*temp5b/
     +    temp5 - xl*2*initgas(lfoa)*recipa1d*foa1h*temp7b/temp7 - xlhno3*2*
     +    initgas(lhno3)*recipa1d*hno31*temp9b/temp9 + co21*temp11b + pso2fd*
     +    temp15b4 + pco2fd*temp15b5 + h2ow*ohb + foa1h*pfoaf*hco2b + hno31h*
     +    phno3f*no3b + hcl1h*phclf*clb
        recipa2b = pco2fd*temp15b6 + pso2fd*temp15b7 + co212*temp11b + so212*
     +    temp2b + so212*temp4b + co212*temp13b + so212h*pso2f*so3b + co212h*
     +    pco2f*co3b
        temp1 = ae**2*act2
        act2b = act2b + (aed*ae+ae*aed)*recipa2db/(temp0*act2**2) - ae**2*
     +    recipa2b/temp1**2
        act1b = act1b + aed*ae**2*recipa1db/temp**2 - recipa1b/(ae*act1**2)
        CALL POPREAL8(ae)
      END SUBROUTINE AQCHEM_FUNP_B
